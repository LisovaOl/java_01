// ===================  –ú–æ–¥—É–ª—å 2. –ó–∞–Ω—è—Ç–∏–µ 3. –ú–∞—Å—Å–∏–≤—ã =========================
// ====== Example 1 - –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Å—Å–∏–≤–æ–º -----------------------

//     –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ genres —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.
//     –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.
//     –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
//     –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.
//     –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
//     –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggy¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.

// const genres = ['Jazz', 'Blues'];
// genres.push('–†–æ–∫-—Ä-—Ä–æ–ª'); //     –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.

// console.log(genres[0]); //     –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.

// // console.log(genres[genres.length - 1]); //–û—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç
// console.log(genres.at(-1)); //–û—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç

// // const deleteGenres = genres.splice(0, 1); //     –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// const deleteGenres = genres.shift(); //     –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.

// console.log(deleteGenres); //     –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// genres.unshift('Country', 'Reggy'); //     –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggy¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.

// console.table(genres);

// ===============       Example 2 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏          ===============

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π values –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏. –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.

// const values = '8 11';

// const arr = values.split(' '); //—Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –Ω–∞ –æ–∫—Ä–µ–º—ñ —Å–∏–º–≤–æ–ª–∏
// console.log(arr);
// const width = Number(arr[0]); // –ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—è –¥–æ —á–∏—Å–ª–æ–≤–æ–≥–æ
// const height = Number(arr[1]); // –ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—è –¥–æ —á–∏—Å–ª–æ–≤–æ–≥–æ
// console.log(width * height); // –æ–±—á–∏—Å–ª–µ–Ω–Ω—è

// —Å–∫–æ—Ä–æ—á–µ–Ω–∏–π –∑–∞–ø–∏—Å –æ–±—á–∏—Å–ª–µ–Ω—å

// console.log(values.split(' ').map(Number).reduce((a, b) => a * b, 1));

// ===============       Example 3 - –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞           =================

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ fruits —Ü–∏–∫–ª–æ–º for. –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –Ω–æ–º–µ—Ä_—ç–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–∏–µ_—ç–ª–µ–º–µ–Ω—Ç–∞. –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

// for (let i = 0; i < fruits.length; i += 1) {
//     console.log(`${i + 1}: ${fruits[i]}`)
// };

// ==============    Example 4 - –ú–∞—Å—Å–∏–≤—ã –∏ —Ü–∏–∫–ª—ã     ===============

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö names –∏ phones —Ö—Ä–∞–Ω—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

const names = 'Jacob,William,Solomon,Artemis';
const phones = '89001234567,89001112233,890055566377,890055566300';

const namesMod = names.split(','); //—Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –Ω–∞ –æ–∫—Ä–µ–º—ñ —Å–∏–º–≤–æ–ª–∏

const phonesMod = phones.split(','); //—Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –Ω–∞ –æ–∫—Ä–µ–º—ñ —Å–∏–º–≤–æ–ª–∏
for (let i = 0; i < namesMod.length; i += 1) {
  console.log(`${namesMod[i]} -- ${phonesMod[i]}`);
}

// ==============  Example 5 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏ ================

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Å–ª–æ–≤–∞ —Å—Ç—Ä–æ–∫–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ. –†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –ø—Ä–æ–±–µ–ª—å–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º. –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–π —Å—Ç—Ä–æ–∫–∏.

// const string = 'Welcome to the future';
// const listOfWords = string.split(' ');
// listOfWords.shift();
// listOfWords.pop();
// console.log(listOfWords.join(' ').trim());
// join(' ')  - –∑—î–¥–Ω—É—î –≤ –æ–¥–∏–Ω —Ä—è–¥–æ–∫ (–Ω–µ –º–∞—Å–∏–≤)
// .trim() - –≤–∏–¥–∞–ª—è—î –≤—Å—Å—ñ –ø—Ä–æ–±—ñ–ª–∏ –Ω–∞ –ø–æ—á–∞—Ç–∫—É —Ç–∞ –≤–∫—ñ–Ω—Ü—ñ

// ============= Example 6 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏ =================

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π ¬´—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç¬ª —Å—Ç—Ä–æ–∫—É (–æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–µ –≤ –∫–æ–Ω—Å–æ–ª—å.

const string = 'Welcome to the future';
const listOfWords = string.split('').reverse().join('');
// console.log(listOfWords);

// ============== Example 7 - –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å —Ü–∏–∫–ª–æ–º =================

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ —ç–ª–µ–º–µ–Ω—Ç–∞.

// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];
// console.log(langs.sort()); // –°–æ—Ä—Ç—É—î –ª–∏—à–µ –ø–æ –ø–µ—Ä—à–∏–º –ª—ñ—Ç–µ—Ä–∞–º
// console.log(langs.sort((a, b) => a > b)); // –°–æ—Ä—Ç—É—î –±—ñ–ª—å—à –∫–æ—Ä–µ–∫—Ç–Ω–æ

// const numbers = [10, 2, 8, 11, 1, 20, 3, 30, 4, 40]
// console.log(numbers.sort()); // –°–æ—Ä—Ç—É—î –ª–∏—à–µ –ø–æ –ø–µ—Ä—à–∏–º –ª—ñ—Ç–µ—Ä–∞–º
// console.log(numbers.sort((a, b) => a > b)); // –°–æ—Ä—Ç—É—î –±—ñ–ª—å—à –∫–æ—Ä–µ–∫—Ç–Ω–æ

// ============== Example 8 - –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ ======================

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª. –ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.

// const numbers = [2, 17, 94, 1, 23, 37];
// let min = numbers[0];

// for (const number of numbers) {
//   if (number < min) {
//     min = number;
//   }
// }
// // console.log(min); // 1
// console.log('min: ', min);


//++++++++ –ë–∞–≥–∞—Ç–æ–º—ñ—Ä–Ω—ñ –º–∞—Å—Å–∏–≤–∏ ++++++

// –†–æ–∑–∫–∞–∂—ñ—Ç—å –ø—Ä–æ –±–∞–≥–∞—Ç–æ–º—ñ—Ä–Ω—ñ –º–∞—Å–∏–≤–∏. –Ø–∫ –∑ –Ω–∏–º–∏ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏? –î–æ–¥–∞–≤–∞—Ç–∏,  –≤–∏–¥–∞–ª—è—Ç–∏, –∑–∞–º—ñ–Ω—é–≤–∞—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏.–ß–∏ –º–æ–∂–ª–∏–≤–æ –∫–æ–ø—ñ—é–≤–∞—Ç–∏ —á–∏ –≤–∏–¥–∞–ª—è—Ç–∏ –π–æ–≥–æ —á–∞—Å—Ç–∏–Ω–∏?
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –º–∞—Å–∏–≤ —ñ–∑ —á–∏—Å–ª–∞–º–∏ [ [1, 2, 3], [44, 55, 66], [70,80,90] ]. –í–∏–¥–∞–ª–∏—Ç–∏ —á–∏—Å–ª–æ 55, –í–∏–¥–∞–ª–∏—Ç–∏ —á–∞—Å—Ç–∏–Ω–∫—É [70,80,90]. –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º—ñ–Ω—É –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ [3]) —Ç–∞ —á–∞—Å—Ç–∏–Ω–∫–∏ [1,2,3]. –î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É —á–∞—Å—Ç–∏–Ω–∫—É —ñ–∑ —Ç—Ä—å–æ—Ö —á–∏—Å–µ–ª –∞–±–æ –±—ñ–ª—å—à–µ (—è–∫—â–æ —Ü–µ –º–æ–∂–ª–∏–≤–æ).
// –Ø–∫ —Ü–µ —Ä–æ–±–∏—Ç–∏ –∑ –±–∞–≥–∞—Ç–æ–º—ñ—Ä–Ω–∏–º–∏ –º–∞—Å–∏–≤–∞ –∑—ñ —Å—Ç—Ä—ñ–Ω–≥–∞–º–∏?
const { log } = console;
const listExample = [[1, 2, 3], [44, 55, 66], [70, 80, 90]];
// listExample[1].splice(1, 1)  // –í–∏–¥–∞–ª–∏—Ç–∏ —á–∏—Å–ª–æ 55
 
// listExample.splice(2, 1);     // –í–∏–¥–∞–ª–∏—Ç–∏ —á–∞—Å—Ç–∏–Ω–∫—É [70,80,90]
// listExample.pop();  // –í–∏–¥–∞–ª–∏—Ç–∏ —á–∞—Å—Ç–∏–Ω–∫—É , –≤–æ–Ω–∞ –æ—Å—Ç–∞–Ω–Ω—è [70,80,90]


// listExample[0][2] = 9 //–ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º—ñ–Ω—É –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ [3]) 
listExample[0] = [9, 8, 7]; //—Ç–∞ —á–∞—Å—Ç–∏–Ω–∫–∏ [1,2,3]
listExample.push([0, 0, 0, 0, 0]);// –î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É —á–∞—Å—Ç–∏–Ω–∫—É —ñ–∑ —Ç—Ä—å–æ—Ö —á–∏—Å–µ–ª –∞–±–æ –±—ñ–ª—å—à–µ

log(listExample);
